rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Użytkownicy mogą czytać i zapisywać swoje własne dane
    match /users/{userId} {
      allow read, write: if request.auth != null && (request.auth.uid == userId || request.auth.token.role == 'admin');
    }
    
    // Administratorzy mogą czytać i zapisywać wszystkie dane użytkowników
    match /users/{document=**} {
      allow read, write: if request.auth != null && request.auth.token.role == 'admin';
    }
    
    // Kursy - nauczyciele mogą zarządzać swoimi kursami
    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.token.role == 'admin' || 
        request.auth.token.role == 'teacher'
      );
    }
    
    // Quizy - nauczyciele mogą zarządzać quizami
    match /quizzes/{quizId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.token.role == 'admin' || 
        request.auth.token.role == 'teacher'
      );
    }
    
    // Wyniki quizów - uczniowie mogą zapisywać swoje wyniki
    match /quiz_results/{resultId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.user_id || 
        request.auth.token.role == 'admin' || 
        request.auth.token.role == 'teacher'
      );
      allow create: if request.auth != null && request.auth.uid == request.resource.data.user_id;
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.user_id || 
        request.auth.token.role == 'admin'
      );
    }
    
    // Próby quizów - uczniowie mogą zapisywać swoje próby
    match /quiz_attempts/{attemptId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.user_id || 
        request.auth.token.role == 'admin' || 
        request.auth.token.role == 'teacher'
      );
      allow create: if request.auth != null && request.auth.uid == request.resource.data.user_id;
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.user_id || 
        request.auth.token.role == 'admin'
      );
    }
    
    // Grupy - administratorzy i nauczyciele mogą zarządzać
    match /groups/{groupId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        request.auth.token.role == 'admin' || 
        request.auth.token.role == 'teacher'
      );
    }
    
    // Czaty grupowe - uczestnicy mogą czytać i pisać
    match /groupChats/{chatId} {
      allow read, write: if request.auth != null && (
        request.auth.uid in resource.data.participants ||
        request.auth.token.role == 'admin' ||
        request.auth.token.role == 'teacher'
      );
    }
    
    // Wiadomości w czatach grupowych - uczestnicy mogą czytać i pisać
    match /groupChats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null && (
        request.auth.uid in get(/databases/$(database)/documents/groupChats/$(chatId)).data.participants ||
        request.auth.token.role == 'admin' ||
        request.auth.token.role == 'teacher'
      );
    }
    
    // Oceny - nauczyciele mogą dodawać oceny, uczniowie mogą czytać swoje oceny
    match /grades/{gradeId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.studentId || 
        request.auth.token.role == 'admin' || 
        request.auth.token.role == 'teacher' ||
        request.auth.token.role == 'parent'
      );
      allow create: if request.auth != null && (
        request.auth.token.role == 'admin' || 
        request.auth.token.role == 'teacher'
      );
      allow update, delete: if request.auth != null && (
        request.auth.token.role == 'admin' || 
        request.auth.token.role == 'teacher'
      );
    }
    
    // Domyślnie - tylko zalogowani użytkownicy mogą czytać
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.token.role == 'admin';
    }
  }
}